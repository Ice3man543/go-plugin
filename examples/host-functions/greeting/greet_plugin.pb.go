//go:build tinygo.wasm

// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin v0.0.1
// 	protoc               v3.21.5
// source: examples/host-functions/greeting/greet.proto

package greeting

import (
	context "context"
	reflect "reflect"
	unsafe "unsafe"
)

var greeter Greeter

func RegisterGreeter(p Greeter) {
	greeter = p
}

func ptrToByte(ptr, size uint32) []byte {
	var b []byte
	s := (*reflect.SliceHeader)(unsafe.Pointer(&b))
	s.Len = uintptr(size)
	s.Cap = uintptr(size)
	s.Data = uintptr(ptr)
	return b
}

func byteToPtr(buf []byte) (uint32, uint32) {
	ptr := &buf[0]
	unsafePtr := uintptr(unsafe.Pointer(ptr))
	return uint32(unsafePtr), uint32(len(buf))
}

//export greeter_greet
func _greeter_greet(ptr, size uint32) uint64 {
	b := ptrToByte(ptr, size)
	var req GreetRequest
	if err := req.UnmarshalVT(b); err != nil {
		return 0
	}
	response, err := greeter.Greet(context.Background(), req)
	if err != nil {
		return 0
	}

	b, err = response.MarshalVT()
	if err != nil {
		return 0
	}
	ptr, size = byteToPtr(b)
	return (uint64(ptr) << uint64(32)) | uint64(size)
}

type hostFunctions struct{}

func NewHostFunctions() HostFunctions {
	return hostFunctions{}
}

//go:wasm-module env
//export http_get
func _http_get(ptr uint32, size uint32) uint64

func (h hostFunctions) HttpGet(ctx context.Context, request HttpGetRequest) (response HttpGetResponse, err error) {
	buf, err := request.MarshalVT()
	if err != nil {
		return response, err
	}
	ptr, size := byteToPtr(buf)
	ptrSize := _http_get(ptr, size)

	ptr = uint32(ptrSize >> 32)
	size = uint32(ptrSize)
	buf = ptrToByte(ptr, size)

	if err = response.UnmarshalVT(buf); err != nil {
		return response, err
	}
	return response, nil
}
